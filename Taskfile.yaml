---
# yaml-language-server: $schema=https://taskfile.dev/schema.json
version: "3"

vars:
  CLUSTER:
    sh: |
      k3d cluster list --no-headers | awk '{print $1}'
  PACKAGE_VERSION:
    sh: |
      find . -name 'zarf-package-k3d-*' | \
      awk -F'zarf-package-k3d-' '{print $2}' | \
      awk -F'.tar.zst' '{print $1}' | \
      head -n 1
  BUNDLE_VERSION:
    sh: |
      find . -name 'uds-bundle-k3d-development-*' | \
      awk -F'uds-bundle-k3d-development-' '{print $2}' | \
      awk -F'.tar.zst' '{print $1}' | \
      head -n 1

includes:
  kubernetes:
    aliases: ["k8s"]
    taskfile: .taskfiles/Kubernetes/Taskfile.yaml
  tools: .taskfiles/Tools/Taskfile.yaml
  bundle: .taskfiles/Bundle/Taskfile.yaml
  pre-commit:
    aliases: ["pre"]
    taskfile: .taskfiles/PreCommit/Taskfile.yaml

tasks:
  default:
    desc: Show help
    cmds:
      - task --list

  create:
    desc: "Create local Zarf Package"
    cmds:
      - zarf package create . --confirm --no-progress --skip-sbom

  setup:
    summary: Setup Developer Environment
    desc: Setup Development Environment
    deps:
      - tools:docker.start
      - create
    cmds:
      - task bundle:deploy

  clean:
    summary: Clean Developer Environment
    desc: Clean Development Environment
    cmds:
      - task tools:k3d.remove
      - rm -f zarf-package-k3d-{{.PACKAGE_VERSION}}.tar.zst
      - rm -f bundle/uds-bundle-k3d-development-{{.BUNDLE_VERSION}}.tar.zst
      - find . -name 'zarf-sbom' | awk '{print "rm -rf " $1}' | sh

  nuke:
    summary: Remove all Artifacts and Delete the k3d Cluster
    cmds:
      - task clean
      - zarf tools clear-cache
