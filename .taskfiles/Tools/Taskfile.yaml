---
# yaml-language-server: $schema=https://taskfile.dev/schema.json
version: "3"

tasks:
  base64-clipboard:
    desc: Base64 encode whatever is in the clipboard
    silent: true
    cmds:
      - pbpaste | base64 | pbcopy
    preconditions:
      - {msg: "pbpaste is not installed. Please install pbpaste.", sh: "command -v pbpaste >/dev/null"}
      - {msg: "pbcopy is not installed. Please install pbcopy.", sh: "command -v pbcopy >/dev/null",}

  docker.start:
    internal: true
    desc: Start Docker on macOS or Linux if it is not already running.
    cmds:
      - |
        os_type=$(uname)

        if [ "$os_type" = "Darwin" ]; then
          if ! pgrep -xq -- "Docker"; then
            echo "Starting Docker on macOS..."
            open /Applications/Docker.app
            while ! docker system info &> /dev/null; do
              echo "Waiting for Docker to start..."
              sleep 5
            done
            echo "Docker is running."
          else
            echo "Docker is already running on macOS."
          fi
        elif [ "$(expr substr "$os_type" 1 5)" = "Linux" ]; then
          if ! systemctl is-active --quiet docker; then
            echo "Starting Docker on Linux..."
            sudo systemctl start docker
            while ! systemctl is-active --quiet docker; do
              echo "Waiting for Docker to start..."
              sleep 5
            done
            echo "Docker is running on Linux."
          else
            echo "Docker is already running on Linux."
          fi
        else
          echo "Unsupported operating system: $os_type"
          exit 1
        fi
    silent: true
    preconditions:
      - {msg: "Docker is not installed. Please install Docker.", sh: "command -v docker >/dev/null",}

  k3d.remove:
    desc: Remove all k3d clusters
    silent: true
    cmds:
      - |
        clusters=$(k3d cluster list -o json | jq -r '.[].name')

        if [ -n "$clusters" ]; then
          for cluster in $clusters; do
            k3d cluster delete $cluster
          done
        else
          echo "No k3d clusters to remove."
        fi
